# gitconfig
[user]
    name = Xavier Muller
    email = xavier.muller@etu.u-bordeaux.fr
[github]
    user = xmuller
#[init]
#    templatedir = ~/.dotfiles/git/templates
[alias]
    # list all aliases
    la = "!git config -l | grep alias | cut -c 7-"    
    co = checkout
    cob = checkout -b
    s  = status
   
    # rebase commands
    cont = rebase --continue
    conf = "!git s | grep ^U"

    l = log --graph --pretty=format:'%Cred%h%Creset %C(bold blue)%an%C(reset) - %s - %Creset %C(yellow)%d%Creset %Cgreen(%cr)%Creset' --abbrev-commit --date=relative

    # show the committers in the last 100 commits, sorted by who has commited the most
    review = "!git log --no-merges --pretty=%an | head -n 100 | sort | uniq -c | sort -nr"

    # order files by number of commits, ascending
    # Written by Corey Haines
    # Scriptified by Gary Bernhardt
    # Show churn for a time range:
    #   $ git churn --since='1 month ago'
    churn = "!f() { git log --all -M -C --name-only --format='format:' \"$@\" | sort | grep -v '^$' | uniq -c | sort | awk 'BEGIN {print \"count\tfile\"} {print $1 \"\t\" $2}' | sort -g; }; f"

    # current branch
    cbr = rev-parse --abbrev-ref HEAD

    # show number of commits per contributer, sorted
    count = shortlog -sn

    # show number of commits in the branch
    countcommit = "!f() { compareBranch=${1-master}; git rev-list --count HEAD ^$compareBranch; }; f"
    
    squashbase = "!f() { branchName=${1-master}; commitCount=$(git countcommit $branchName); git rebase -i HEAD~$commitCount; }; f"

    undo = reset --soft HEAD~1
    amend = commit -a --amend
    cane = commit --amend --no-edit

    cleanup = "!git remote prune origin && git gc && git clean -df && git stash clear"

    # rebase the current branch with changes from upstream remote
    update = !git fetch upstream && git rebase upstream/`git rev-parse --abbrev-ref HEAD`

    # tag aliases
    # show the last tag
    lt = describe --tags --abbrev=0

    # clean up all 
    forget = "!git fetch -p origin && git branch -vv | awk '/: gone]/{print $1}' | xargs git branch -D"

    # show the most recently touched branches
    recent = "!git for-each-ref --sort='-committerdate' --format='%(color:red)%(refname)%(color:reset)%09%(committerdate)' refs/heads | sed -e 's-refs/heads/--' | less -XFR"
    latest = "!git for-each-ref --sort='-committerdate' --format='%(color:red)%(refname)%(color:reset)%09%(committerdate)' refs/remotes | sed -e 's-refs/remotes/origin/--' | less -XFR"

[color]
    diff = auto
    status = auto
    branch = auto
    interactive = auto
    ui = auto
[color "branch"]
    current = green bold
    local = green
    remote = red bold
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[color "status"]
    added = green bold
    changed = yellow bold
    untracked = red
[color "sh"]
    branch = yellow
[push]
    # push will only do the current branch, not all branches
    default = current
[branch]
    # set up 'git pull' to rebase instead of merge
    autosetuprebase = always
[pull]
    rebase = true
[diff]
    renames = copies
    mnemonicprefix = true
    compactionHeuristic = true
[difftool]
    prompt = false
[core]
    excludesfile = ~/.gitignore_global
    pager = less -FXRS -x2
    editor = nvim
    whitespace = cr-at-eol
[rerere]
    enabled = true
[grep]
    extendRegexp = true
    lineNumber = true
snapshot
	trustexitcode = true
[rebase]
	instructionFormat = "[%an - %ar] %s"
	autoStash = true
[pager]
    diff = "diff-so-fancy | less --tabs=4 -RFX"
    show = "diff-so-fancy | less --tabs=4 -RFX"
   
